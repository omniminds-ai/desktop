name: 'Beta Release (No Signing)'

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches:
      - main # Triggers on push to 'main' branch
      - staging # Triggers on push to 'main' branch

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # macOS ARM (M1+)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # macOS Intel
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # Linux x64
            args: ''
          - platform: 'windows-latest' # Windows x64
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      # Install Linux dependencies
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Setup Node.js
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Change to 'yarn' or 'pnpm' if you use those

      # Setup Rust
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # macOS targets
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Cache Rust dependencies
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # Install frontend dependencies
      - name: install frontend dependencies
        run: npm install # Change to 'yarn install' or 'pnpm install' if needed

      # Build and create release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # Auto-replaced with app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          includeRelease: true
          tauriScript: npm run tauri
          projectPath: '..'
          args: ${{ matrix.args }}